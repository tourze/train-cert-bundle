Note: Using configuration file /home/admin/work/source/php-monorepo/phpstan.neon.
{"totals":{"errors":0,"file_errors":25},"files":{"/home/admin/work/source/php-monorepo/packages/train-cert-bundle/src/DataFixtures/CertificateFixtures.php":{"errors":1,"messages":[{"message":"Instead of calling \"->getRepository(BizUser::class)\" service locator, inject service repository \"BizUserBundle\\Repository\\BizUserRepository\" via constructor and use it directly","line":52,"ignorable":true,"identifier":"doctrine.injectServiceRepository"}]},"/home/admin/work/source/php-monorepo/packages/train-cert-bundle/src/DataFixtures/CertificateVerificationFixtures.php":{"errors":2,"messages":[{"message":"Instead of calling \"->getRepository(Certificate::class)\" service locator, inject service repository \"Tourze\\TrainCertBundle\\Repository\\CertificateRepository\" via constructor and use it directly","line":20,"ignorable":true,"identifier":"doctrine.injectServiceRepository"},{"message":"Construct empty() is not allowed. Use more strict comparison.","line":23,"ignorable":true,"identifier":"empty.notAllowed"}]},"/home/admin/work/source/php-monorepo/packages/train-cert-bundle/src/Entity/CertificateTemplate.php":{"errors":1,"messages":[{"message":"实体类 Tourze\\TrainCertBundle\\Entity\\CertificateTemplate 不应使用 @ORM\\HasLifecycleCallbacks。请使用 Doctrine\\Bundle\\DoctrineBundle\\Attribute\\AsEntityListener 来处理实体事件。参考：https://symfony.com/doc/current/doctrine/events.html#doctrine-entity-listeners","line":24,"ignorable":true}]},"/home/admin/work/source/php-monorepo/packages/train-cert-bundle/src/Repository/CertificateApplicationRepository.php":{"errors":3,"messages":[{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateApplicationRepository::findByUserId() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateApplication> but returns mixed.","line":48,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateApplicationRepository::findByStatus() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateApplication> but returns mixed.","line":66,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateApplicationRepository::findByTemplateId() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateApplication> but returns mixed.","line":104,"ignorable":true,"identifier":"return.type"}]},"/home/admin/work/source/php-monorepo/packages/train-cert-bundle/src/Repository/CertificateAuditRepository.php":{"errors":4,"messages":[{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateAuditRepository::findByApplicationId() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateAudit> but returns mixed.","line":48,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateAuditRepository::findPendingAudits() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateAudit> but returns mixed.","line":66,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateAuditRepository::findByAuditor() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateAudit> but returns mixed.","line":84,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateAuditRepository::findCompletedAudits() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateAudit> but returns mixed.","line":102,"ignorable":true,"identifier":"return.type"}]},"/home/admin/work/source/php-monorepo/packages/train-cert-bundle/src/Repository/CertificateRecordRepository.php":{"errors":5,"messages":[{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateRecordRepository::findExpiringCertificates() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateRecord> but returns mixed.","line":67,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateRecordRepository::findExpiredCertificates() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateRecord> but returns mixed.","line":87,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateRecordRepository::findByCertificateType() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateRecord> but returns mixed.","line":105,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateRecordRepository::findByIssuingAuthority() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateRecord> but returns mixed.","line":123,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateRecordRepository::findExpiredBefore() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateRecord> but returns mixed.","line":141,"ignorable":true,"identifier":"return.type"}]},"/home/admin/work/source/php-monorepo/packages/train-cert-bundle/src/Repository/CertificateTemplateRepository.php":{"errors":4,"messages":[{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateTemplateRepository::findActiveTemplates() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateTemplate> but returns mixed.","line":48,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateTemplateRepository::findByType() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateTemplate> but returns mixed.","line":66,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateTemplateRepository::findDefaultTemplate() should return Tourze\\TrainCertBundle\\Entity\\CertificateTemplate|null but returns mixed.","line":84,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateTemplateRepository::findDefaultTemplateByType() should return Tourze\\TrainCertBundle\\Entity\\CertificateTemplate|null but returns mixed.","line":101,"ignorable":true,"identifier":"return.type"}]},"/home/admin/work/source/php-monorepo/packages/train-cert-bundle/src/Repository/CertificateVerificationRepository.php":{"errors":5,"messages":[{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateVerificationRepository::findByCertificateId() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateVerification> but returns mixed.","line":48,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateVerificationRepository::findSuccessfulVerifications() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateVerification> but returns mixed.","line":66,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateVerificationRepository::findByIpAddress() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateVerification> but returns mixed.","line":84,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateVerificationRepository::findVerificationsBeforeDate() should return array<int, Tourze\\TrainCertBundle\\Entity\\CertificateVerification> but returns mixed.","line":102,"ignorable":true,"identifier":"return.type"},{"message":"Method Tourze\\TrainCertBundle\\Repository\\CertificateVerificationRepository::getVerificationStatistics() should return array<string, mixed> but returns mixed.","line":140,"ignorable":true,"identifier":"return.type"}]}},"errors":[]}